<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>hkn</string>
	</array>
	<key>name</key>
	<string>HotkeyNet</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>((//).*)</string>
			<key>name</key>
			<string>comment.line.double-slash.hotkeynet</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;(AddButtonToPanel|AlwaysOnTop|ApplyTemplate|BlockInput|Cancel|ClickMouse|CloseWin|CommandLine|Comment|CreateButton|CreateColoredButton|CreatePanel|CreatePictureButton|CursorInfo|DefineKey|DoHotkey|DoToggles|DisplayVars|DoRandomToggle|Else|EndIf|EndTemplate|HideWin|Hotkey|HotkeyUp|IncludeFile|Key|KeyDown|KeyList|KeyUp|KillBackgroundFocus|KillMutex|Label|ListButtons|LoadHotkeyFile|LoadScript|MaximizeWin|MinimizeWin|MovementHotkey|MoveMouse|Open|Override|PassThrough|PingHotkeyNet|PostMessage|RemoveWinFrame|RenameFromPath|RenameTargetWin|RenameWin|ResetToggles|Restore|RestoreCapsLock|RestoreLockKeys|RestoreMousePos|RestoreWinSize|Run|SaveMousePos|SendFocusWin|SendLabel|SendCopyDataMessage|SendMessage|SendPC|SendTo|SendRegisteredMessage|SendWin|SendWinM|SendWinMF|SendWinS|SendWinSF|SendWinX|SetActiveWin|SetActiveBackgroundWin|SetActiveWindowTracking|SetActiveWindowTrackingDelay|SetAffinity|SetBackgroundFocus|SetBackgroundFocusDelays|SetButtonColors|SetButtonCommand|SetButtonHotkey|SetButtonStyle|SetButtonText|SetFocus|SetFocusWin|SetForeground|SetForegroundWin|SetFramelessWinSizeWithSimulatedMouse|SetGamma|SetLocal|SetPanelDrag|SetPanelLayout|SetPanelPicture|SetPanelStyle|SetPriority|SetSendMode|SetTaskbarAlwaysOnTop|SetTaskbarAutoHide|SetToggle|SetWinFrame|SetWinOpacity|SetWinPos|SetWinRect|SetWinRedraw|SetWinRegion|SetWinSize|ShowWin|TargetButton|TargetChild|TargetForegroundWin|TargetWin|TargetWinFromRegisteredMessage|Template|Text|ThirdPartyCommandLine|Toggle|ToggleHotkeys|ToggleWin|Trigger|TriggerMainKey|TurnCapsLockOff|TurnHotkeysOff|TurnHotkeysOn|TurnLockKeysOff|UnloadScript|UpdateWin|UseKeyAsModifier|Wait|WaitForInputIdle|WaitForWin|WaitForWinEnabled)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.command.hotkeynet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.command.builtin.hotkeynet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modifier-key</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#toggle-modifier-key</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#command-parameter</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;(Else +)?(If) +(ActiveWinIs|ActiveWinIsNot|HotkeysAreOn|HotkeysAreOff|WinExists|WinDoesNotExist|MouseIsOverWindow|MouseIsNotOverWindow|MouseIsOverWindowRect|MouseIsNotOverWindowRect|MouseIsOverScreenRect|MouseIsNotOverScreenRect|WinPosIs|WinPosIsNot|WinSizeIs|WinSizeIsNot|WinRectIs|WinRectIsNot)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.hotkeynet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.hotkeynet</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.condition.hotkeynet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.command.builtin.state-condition.hotkeynet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#command-parameter</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;(Else +)?(If) +(\w+) +(Is(Not)?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.hotkeynet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.hotkeynet</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.other.hotkeynet</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.condition.hotkeynet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.command.builtin.variable-condition.hotkeynet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#command-parameter</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;(SetVar) +(\w+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.command.hotkeynet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.hotkeynet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.command.builtin.variable-set.hotkeynet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#command-parameter</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.command.hotkeynet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.command.hotkeynet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>&lt;(Command) +(\w+)&gt;</string>
			<key>name</key>
			<string>meta.command.custom.definition.hotkeynet</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>&lt;(\w+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.command.hotkeynet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.command.custom.usage.hotkeynet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#command-parameter</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>command-parameter</key>
		<dict>
			<key>match</key>
			<string>\b(F(1[0-2]|[0-9]))\b</string>
			<key>name</key>
			<string>constant.language.function-key.hotkeynet</string>
		</dict>
		<key>modifier-key</key>
		<dict>
			<key>match</key>
			<string>\b(L|R)?(Shift|Ctrl|Alt)\b</string>
			<key>name</key>
			<string>support.type.modifier.hotkeynet</string>
		</dict>
		<key>toggle-modifier-key</key>
		<dict>
			<key>match</key>
			<string>\b(Scroll|Caps|Num)Lock(On|Off)\b</string>
			<key>name</key>
			<string>storage.modifier.toggle-modifier.hotkeynet</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.hotkeynet</string>
	<key>uuid</key>
	<string>b3176f3a-13df-41e2-b216-52694d15a51c</string>
</dict>
</plist>
