# [PackageDev] target_format: plist, ext: tmLanguage
---
name: HotkeyNet
scopeName: source.hotkeynet
fileTypes: [hkn]
uuid: b3176f3a-13df-41e2-b216-52694d15a51c

patterns:
- name: comment.line.double-slash.hotkeynet
  match: ((//).*)
  
- name: meta.command.builtin.hotkeynet
  begin: <(AddButtonToPanel|AlwaysOnTop|ApplyTemplate|BlockInput|Cancel|ClickMouse|CloseWin|CommandLine|Comment|CreateButton|CreateColoredButton|CreatePanel|CreatePictureButton|CursorInfo|DefineKey|DoHotkey|DoToggles|DisplayVars|DoRandomToggle|Else|EndIf|EndTemplate|HideWin|Hotkey|HotkeyUp|IncludeFile|Key|KeyDown|KeyList|KeyUp|KillBackgroundFocus|KillMutex|Label|ListButtons|LoadHotkeyFile|LoadScript|MaximizeWin|MinimizeWin|MovementHotkey|MoveMouse|Open|Override|PassThrough|PingHotkeyNet|PostMessage|RemoveWinFrame|RenameFromPath|RenameTargetWin|RenameWin|ResetToggles|Restore|RestoreCapsLock|RestoreLockKeys|RestoreMousePos|RestoreWinSize|Run|SaveMousePos|SendFocusWin|SendLabel|SendCopyDataMessage|SendMessage|SendPC|SendTo|SendRegisteredMessage|SendWin|SendWinM|SendWinMF|SendWinS|SendWinSF|SendWinX|SetActiveWin|SetActiveBackgroundWin|SetActiveWindowTracking|SetActiveWindowTrackingDelay|SetAffinity|SetBackgroundFocus|SetBackgroundFocusDelays|SetButtonColors|SetButtonCommand|SetButtonHotkey|SetButtonStyle|SetButtonText|SetFocus|SetFocusWin|SetForeground|SetForegroundWin|SetFramelessWinSizeWithSimulatedMouse|SetGamma|SetLocal|SetPanelDrag|SetPanelLayout|SetPanelPicture|SetPanelStyle|SetPriority|SetSendMode|SetTaskbarAlwaysOnTop|SetTaskbarAutoHide|SetToggle|SetWinFrame|SetWinOpacity|SetWinPos|SetWinRect|SetWinRedraw|SetWinRegion|SetWinSize|ShowWin|TargetButton|TargetChild|TargetForegroundWin|TargetWin|TargetWinFromRegisteredMessage|Template|Text|ThirdPartyCommandLine|Toggle|ToggleHotkeys|ToggleWin|Trigger|TriggerMainKey|TurnCapsLockOff|TurnHotkeysOff|TurnHotkeysOn|TurnLockKeysOff|UnloadScript|UpdateWin|UseKeyAsModifier|Wait|WaitForInputIdle|WaitForWin|WaitForWinEnabled)\b
  beginCaptures:
    '1': {name: support.function.command.hotkeynet}
  end: '>'
  patterns:
  - include: '#modifier-key'
  - include: '#toggle-modifier-key'
  - include: '#command-parameter'
  
- name: meta.command.builtin.state-condition.hotkeynet
  begin: <(Else +)?(If) +(ActiveWinIs|ActiveWinIsNot|HotkeysAreOn|HotkeysAreOff|WinExists|WinDoesNotExist|MouseIsOverWindow|MouseIsNotOverWindow|MouseIsOverWindowRect|MouseIsNotOverWindowRect|MouseIsOverScreenRect|MouseIsNotOverScreenRect|WinPosIs|WinPosIsNot|WinSizeIs|WinSizeIsNot|WinRectIs|WinRectIsNot)
  beginCaptures:
    '1': {name: keyword.control.hotkeynet}
    '2': {name: keyword.control.hotkeynet}
    '3': {name: keyword.operator.condition.hotkeynet}
  end: '>'
  patterns:
  - include: '#command-parameter'
  
- name: meta.command.builtin.variable-condition.hotkeynet
  begin: <(Else +)?(If) +(\w+) +(Is(Not)?)
  beginCaptures:
    '1': {name: keyword.control.hotkeynet}
    '2': {name: keyword.control.hotkeynet}
    '3': {name: variable.other.hotkeynet}
    '4': {name: keyword.operator.condition.hotkeynet}
  end: '>'
  patterns:
  - include: '#command-parameter'

- name: meta.command.builtin.variable-set.hotkeynet
  begin: <(SetVar) +(\w+)
  beginCaptures:
    '1': {name: support.function.command.hotkeynet}
    '2': {name: variable.other.hotkeynet}
  end: '>'
  patterns:
  - include: '#command-parameter'

- name: meta.command.custom.definition.hotkeynet
  match: <(Command) +(\w+)>
  captures:
    '1': {name: support.function.command.hotkeynet}
    '2': {name: entity.name.tag.command.hotkeynet}
  
- name: meta.command.custom.usage.hotkeynet
  begin: <(\w+)
  beginCaptures:
    '1': {name: entity.name.tag.command.hotkeynet}
  end: '>'
  patterns:
  - include: '#command-parameter'
  
  
repository:
  modifier-key:
    match: \b(L|R)?(Shift|Ctrl|Alt)\b
    name: support.type.modifier.hotkeynet
    
  toggle-modifier-key:
    match: \b(Scroll|Caps|Num)Lock(On|Off)\b
    name: storage.modifier.toggle-modifier.hotkeynet

  # TODO support all allowed keys; extra syntax ("... except ...", commas and semicolons)
  command-parameter:
    match: \b(F(1[0-2]|[0-9]))\b
    name: constant.language.function-key.hotkeynet
    
...
